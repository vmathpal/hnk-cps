import { unzipSync, strFromU8 } from 'fflate';
/**
 * Reads XLSX file in a browser.
 * @param  {File} file - A `File` object being uploaded in the browser.
 * @return {Promise} Resolves to an object holding XLSX file entries.
 */

export default function unpackXlsxFile(file) {
  var startedAt = Date.now();
  return file.arrayBuffer().then(function (fileBuffer) {
    var archive = new Uint8Array(fileBuffer);
    var contents = unzipSync(archive);
    return getContents(contents); // return new Promise((resolve, reject) => {
    // 	unzip(archive, (error, contents) => {
    // 		if (error) {
    // 			return reject(error)
    // 		}
    // 		return resolve(getContents(contents))
    // 	})
    // })
  });
}

function getContents(contents) {
  var unzippedFiles = [];

  for (var _i = 0, _Object$keys = Object.keys(contents); _i < _Object$keys.length; _i++) {
    var key = _Object$keys[_i];
    unzippedFiles[key] = strFromU8(contents[key]);
  }

  return unzippedFiles;
}
//# sourceMappingURL=unpackXlsxFileBrowser.js.map